{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams, useRouteMatch, Switch, Route, Link, NavLink } from \"react-router-dom\";\nimport { readDeck, listCards } from \"../../utils/api/index\";\nimport DeckCard from \"./DeckCard\";\nimport DeckEdit from \"./DeckEdit\";\nimport DeckViewHome from \"./DeckViewHome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeckView = () =>\n/* { deckId = { posts: [] }} */\n{\n  _s();\n\n  const history = useHistory();\n  const {\n    url\n  } = useRouteMatch();\n  const params = useParams();\n  const deckId = params['deckId'];\n  const [thisDeck, setThisDeck] = useState({});\n  const [deckCards, setDeckCards] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\n  }, []);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listCards(deckId, abortController.signal).then(setDeckCards).catch(setError);\n  }, []);\n\n  if (error) {\n    return \"ERROR \" + error; // <ErrorMessage error={error} />;\n  }\n\n  const cardComponents = deckCards.map(cardObj => /*#__PURE__*/_jsxDEV(DeckCard, {\n    cardObj: cardObj,\n    browserHistory: history,\n    deckViewUrl: url\n  }, cardObj['id'], false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n  const BASE_URL = `/users/${thisDeck['id']}`;\n  const EDIT_URL = `${url}/edit`;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"col-12 col-md-6 col-xl-3 my-2 align-self-stretch\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 h-100 d-flex flex-column\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: url,\n          children: /*#__PURE__*/_jsxDEV(DeckViewHome, {\n            deck: thisDeck,\n            browserHistory: history,\n            editUrl: EDIT_URL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: EDIT_URL,\n          children: /*#__PURE__*/_jsxDEV(DeckEdit, {\n            deckId: deckId,\n            deckName: thisDeck['name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: url,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"row\",\n          children: cardComponents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeckView, \"zVEx8ILOCXkHqXmED7M1OqmK7sg=\", false, function () {\n  return [useHistory, useRouteMatch, useParams];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Decks/DeckView.js"],"names":["React","useEffect","useState","useHistory","useParams","useRouteMatch","Switch","Route","Link","NavLink","readDeck","listCards","DeckCard","DeckEdit","DeckViewHome","DeckView","history","url","params","deckId","thisDeck","setThisDeck","deckCards","setDeckCards","error","setError","undefined","abortController","AbortController","signal","then","catch","cardComponents","map","cardObj","BASE_URL","EDIT_URL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch, Switch, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { readDeck, listCards } from \"../../utils/api/index\";\r\nimport DeckCard from \"./DeckCard\";\r\nimport DeckEdit from \"./DeckEdit\";\r\nimport DeckViewHome from \"./DeckViewHome\";\r\n\r\nexport const DeckView = (/* { deckId = { posts: [] }} */) => {\r\n    const history = useHistory();\r\n    const { url } = useRouteMatch();\r\n    const params = useParams();\r\n    const deckId = params['deckId'];\r\n    const [thisDeck, setThisDeck] = useState({});\r\n    const [deckCards, setDeckCards] = useState([]);\r\n    const [error, setError] = useState(undefined);\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        readDeck(deckId,\r\n            abortController.signal).then(setThisDeck).catch(setError);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        listCards(deckId,\r\n            abortController.signal).then(setDeckCards).catch(setError);\r\n    }, []);\r\n    if (error) {\r\n        return \"ERROR \" + error; // <ErrorMessage error={error} />;\r\n    }\r\n\r\n    const cardComponents = deckCards.map((cardObj) =>\r\n        <DeckCard key={cardObj['id']}\r\n            cardObj={cardObj}\r\n            browserHistory={history}\r\n            deckViewUrl={url}/>);\r\n\r\n    const BASE_URL = `/users/${thisDeck['id']}`;\r\n    const EDIT_URL = `${url}/edit`;\r\n    return (\r\n        <article className=\"col-12 col-md-6 col-xl-3 my-2 align-self-stretch\">\r\n            {/* <header>\r\n                <NavLink to=\"/\">Home</NavLink> / {thisDeck['name']}\r\n            </header> */}\r\n            <div className=\"border p-4 h-100 d-flex flex-column\">\r\n                <Switch>\r\n                    <Route exact={true} path={url}>\r\n                        <DeckViewHome\r\n                            deck={thisDeck}\r\n                            browserHistory={history}\r\n                            editUrl={EDIT_URL}/>\r\n                    </Route>\r\n                    <Route path={EDIT_URL}>\r\n                        <DeckEdit deckId={deckId} deckName={thisDeck['name']}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            <Switch>\r\n                <Route exact={true} path={url}>\r\n                    <h2>Cards</h2>\r\n                    <section className=\"row\">{cardComponents}</section>\r\n                </Route>\r\n            </Switch>\r\n            {/* <h2>Cards</h2>\r\n            <section className=\"row\">{cardComponents}</section> */}\r\n        </article>\r\n    )};\r\n\r\nexport default DeckView;"]},"metadata":{},"sourceType":"module"}