{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\DeckList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks, listCards } from \"../../utils/api/index\";\nimport Deck from \"../Decks/Deck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst allData = require(\"../../data/db.json\"); // import ErrorMessage from \"../common/ErrorMessage\";\n\n\nexport const DeckList = () => {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [error, setError] = useState(undefined); // console.log(\"ALL OBJECTS JSON, \", allData);\n\n  /*\r\n  useEffect(() => {\r\n    setDecks(allData['decks']);\r\n    const abortController = new AbortController();\r\n    listCards(1, abortController.signal).then(setCards).catch(setError);\r\n    console.log(\"ATTEMPTED UTILS RETRIEVAL OF 1st deck's cards, \", cards);\r\n  }, []); // do only once\r\n  */\n  // console.log(\"Decks, \", decks);\n  // WAIT UNTIL SERVER IS SET UP\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n    console.log(\"ATTEMPTED UTILS RETRIEVAL OF DECKS, \", decks);\n    const abortController2 = new AbortController();\n    listCards(1, abortController2.signal).then(setCards).catch(setError);\n    console.log(\"ATTEMPTED UTILS RETRIEVAL OF 1st deck's cards, \", cards);\n    return () => {\n      abortController.abort();\n      abortController2.abort();\n    };\n  }, []); // do only once\n\n  if (error) {\n    return \"ERROR \" + error; // <ErrorMessage error={error} />;\n  }\n\n  const list = decks.map(deckObj => /*#__PURE__*/_jsxDEV(Deck, {\n    deckObj: deckObj\n  }, deckObj['id'], false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeckList, \"blN5otQvNg7mr4J6j/UZb/gYcC8=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Home/DeckList.js"],"names":["React","useEffect","useState","listDecks","listCards","Deck","allData","require","DeckList","decks","setDecks","cards","setCards","error","setError","undefined","abortController","AbortController","signal","then","catch","console","log","abortController2","abort","list","map","deckObj"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAAvB,C,CACA;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACa,SAAD,CAAlC,CAH4B,CAI5B;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AAEAd,IAAAA,SAAS,CAACa,eAAe,CAACE,MAAjB,CAAT,CAAkCC,IAAlC,CAAuCT,QAAvC,EAAiDU,KAAjD,CAAuDN,QAAvD;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDb,KAApD;AAEA,UAAMc,gBAAgB,GAAG,IAAIN,eAAJ,EAAzB;AACAb,IAAAA,SAAS,CAAC,CAAD,EAAImB,gBAAgB,CAACL,MAArB,CAAT,CAAsCC,IAAtC,CAA2CP,QAA3C,EAAqDQ,KAArD,CAA2DN,QAA3D;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+DX,KAA/D;AACA,WAAO,MAAM;AAACK,MAAAA,eAAe,CAACQ,KAAhB;AAAyBD,MAAAA,gBAAgB,CAACC,KAAjB;AAAyB,KAAhE;AACD,GAVQ,EAUN,EAVM,CAAT,CAf4B,CAyBpB;;AAER,MAAIX,KAAJ,EAAW;AACT,WAAO,WAAWA,KAAlB,CADS,CACgB;AAC1B;;AAED,QAAMY,IAAI,GAAGhB,KAAK,CAACiB,GAAN,CAAWC,OAAD,iBACrB,QAAC,IAAD;AAA0B,IAAA,OAAO,EAAEA;AAAnC,KAAWA,OAAO,CAAC,IAAD,CAAlB;AAAA;AAAA;AAAA;AAAA,UADW,CAAb;AAGA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA,gBAA0BF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCM;;GAAMjB,Q;;KAAAA,Q;AAyCb,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { listDecks, listCards } from \"../../utils/api/index\";\r\nimport Deck from \"../Decks/Deck\";\r\nconst allData = require(\"../../data/db.json\");\r\n// import ErrorMessage from \"../common/ErrorMessage\";\r\n\r\nexport const DeckList = () => {\r\n  const [decks, setDecks] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  // console.log(\"ALL OBJECTS JSON, \", allData);\r\n  /*\r\n  useEffect(() => {\r\n    setDecks(allData['decks']);\r\n    const abortController = new AbortController();\r\n    listCards(1, abortController.signal).then(setCards).catch(setError);\r\n    console.log(\"ATTEMPTED UTILS RETRIEVAL OF 1st deck's cards, \", cards);\r\n  }, []); // do only once\r\n  */\r\n  // console.log(\"Decks, \", decks);\r\n  // WAIT UNTIL SERVER IS SET UP\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    listDecks(abortController.signal).then(setDecks).catch(setError);\r\n    console.log(\"ATTEMPTED UTILS RETRIEVAL OF DECKS, \", decks);\r\n\r\n    const abortController2 = new AbortController();\r\n    listCards(1, abortController2.signal).then(setCards).catch(setError);\r\n    console.log(\"ATTEMPTED UTILS RETRIEVAL OF 1st deck's cards, \", cards);\r\n    return () => {abortController.abort(); abortController2.abort()};\r\n  }, []); // do only once\r\n\r\n  if (error) {\r\n    return \"ERROR \" + error; // <ErrorMessage error={error} />;\r\n  }\r\n\r\n  const list = decks.map((deckObj) =>\r\n    <Deck key={deckObj['id']} deckObj={deckObj} />);\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <section className=\"row\">{list}</section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DeckList;"]},"metadata":{},"sourceType":"module"}