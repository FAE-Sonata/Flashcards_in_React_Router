{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Cards\\\\CardEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams, NavLink } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardEdit = () => {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const deckId = params['deckId'];\n  const cardId = params['cardId'];\n  const [thisCard, setThisCard] = useState({});\n  const [thisDeck, setThisDeck] = useState({}); // const [error, setError] = useState(undefined);\n\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n\n  const handleFrontChange = event => setFront(event['target']['value']);\n\n  const handleBackChange = event => setBack(event['target']['value']);\n\n  useEffect(() => {\n    setThisCard({});\n    setFront(\"\");\n    setBack(\"\");\n    const abortController = new AbortController();\n\n    async function loadSides() {\n      try {\n        let deckResponse = await readDeck(deckId, abortController.signal);\n        setThisDeck(deckResponse);\n        let cardResponse = await readCard(cardId, abortController.signal);\n        setThisCard(cardResponse);\n        setFront(cardResponse['front']);\n        setBack(cardResponse['back']);\n      } catch (error) {\n        return \"ERROR \" + error; // <ErrorMessage error={error} />;\n      }\n    }\n\n    loadSides();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const modifiedCard = { ...thisCard,\n      ['front']: front,\n      ['back']: back\n    }; // console.log(\"CARD EDIT SUBMISSION: \", modifiedCard);\n    // produces warning, but /decks/:deckId will not immediately display new name upon Submit\n\n    const abortController = new AbortController();\n\n    try {\n      updateCard(modifiedCard, abortController.signal);\n    } catch (error) {\n      console.log(\"ERROR: \" + error); // <ErrorMessage error={error} />;\n    }\n\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), \" / Deck \", thisDeck['name'], \" / Edit Card \", cardId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"front\",\n        children: [\"Front:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"front\",\n          name: \"front\",\n          onChange: handleFrontChange,\n          value: front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"back\",\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"back\",\n          name: \"back\",\n          onChange: handleBackChange,\n          value: back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.goBack(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardEdit, \"1cSnXf8aLbZfw6mEm4CKCdFr6jU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Cards/CardEdit.js"],"names":["React","useEffect","useState","useHistory","useParams","NavLink","readDeck","readCard","updateCard","CardEdit","history","params","deckId","cardId","thisCard","setThisCard","thisDeck","setThisDeck","front","setFront","back","setBack","handleFrontChange","event","handleBackChange","abortController","AbortController","loadSides","deckResponse","signal","cardResponse","error","abort","handleSubmit","preventDefault","modifiedCard","console","log","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, NavLink } from \"react-router-dom\";\r\nimport { readDeck, readCard, updateCard } from \"../../utils/api/index\";\r\n\r\nexport const CardEdit = () => {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const deckId = params['deckId']; const cardId = params['cardId'];\r\n\r\n    const [thisCard, setThisCard] = useState({});\r\n    const [thisDeck, setThisDeck] = useState({});\r\n    // const [error, setError] = useState(undefined);\r\n\r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n    const handleFrontChange = (event) => setFront(event['target']['value']);\r\n    const handleBackChange = (event) => setBack(event['target']['value']);\r\n    useEffect(() => {\r\n        setThisCard({}); setFront(\"\"); setBack(\"\");\r\n        const abortController = new AbortController();\r\n        async function loadSides() {\r\n            try {\r\n                let deckResponse = await readDeck(deckId, abortController.signal);\r\n                setThisDeck(deckResponse);\r\n\r\n                let cardResponse = await readCard(cardId, abortController.signal);\r\n                setThisCard(cardResponse);\r\n                setFront(cardResponse['front']); setBack(cardResponse['back']);\r\n            }\r\n            catch(error)    {\r\n                return \"ERROR \" + error; // <ErrorMessage error={error} />;\r\n            }\r\n        }\r\n        loadSides();\r\n        return (() => { abortController.abort() });\r\n    }, []);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const modifiedCard = {...thisCard, ['front']: front, ['back']: back};\r\n        // console.log(\"CARD EDIT SUBMISSION: \", modifiedCard);\r\n        // produces warning, but /decks/:deckId will not immediately display new name upon Submit\r\n        const abortController = new AbortController();\r\n        try {\r\n            updateCard(modifiedCard, abortController.signal);\r\n        }\r\n        catch(error) {\r\n            console.log(\"ERROR: \" + error); // <ErrorMessage error={error} />;\r\n        }\r\n        history.goBack();\r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <header>\r\n                <NavLink to=\"/\">Home</NavLink> / Deck {thisDeck['name']} / Edit Card {cardId}\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"front\">\r\n                    Front:\r\n                    <textarea\r\n                        id=\"front\"\r\n                        name=\"front\"\r\n                        onChange={handleFrontChange}\r\n                        value={front}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"back\">\r\n                    Description:\r\n                    <textarea\r\n                        id=\"back\"\r\n                        name=\"back\"\r\n                        onChange={handleBackChange}\r\n                        value={back}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={() => history.goBack()}>Cancel</button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CardEdit;"]},"metadata":{},"sourceType":"module"}