{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Cards\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, useRouteMatch, NavLink } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport StudyCard from \"./StudyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_CARDS = 3;\n\nfunction NotEnough(numCards, browserHistory, addCardUrl) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not enough cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need at least \", MIN_CARDS, \" cards to study. There are \", numCards, \" cards in this deck.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        browserHistory.push(addCardUrl);\n      },\n      children: \"Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = NotEnough;\nexport const Study = () => {\n  _s();\n\n  console.log(\"ENTERING STUDY COMPONENT\");\n  const history = useHistory();\n  const {\n    url\n  } = useRouteMatch();\n  const params = useParams();\n  const deckId = params['deckId'];\n  console.log(\"STUDY DECK ID, \", deckId); // const deckUrl = url.substr(0, (url.length - \"cards/new\".length) - 1)\n  // const [thisDeck, setThisDeck] = useState({});\n\n  let deckName = \"\";\n  let cardList = [];\n  const [counter, setCounter] = useState(0);\n  const incrementCounter = setCounter(x => {\n    return x + 1;\n  }); // useEffect(() => {\n  //     setThisDeck({});\n  //     const abortController = new AbortController();\n  //     async function loadCards() {\n  //         try {\n  //             let response = await readDeck(deckId, abortController.signal);\n  //             // console.log('EDIT RESPONSE was: ', response['description']);\n  //             // let deckFromAPI = response;\n  //             setThisDeck(response);\n  //             // deckName = thisDeck['name'];\n  //             // cardList = thisDeck['cards'];\n  //         }\n  //         catch(error)    {\n  //             return \"ERROR \" + error; // <ErrorMessage error={error} />;\n  //         }\n  //     }\n  //     loadCards();\n  //     return (() => { abortController.abort() });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), \" / \", deckName, \" / Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Study, \"1XfVADtykzdc4ARCPsDsB7B4GVs=\", false, function () {\n  return [useHistory, useRouteMatch, useParams];\n});\n\n_c2 = Study;\nexport default Study;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotEnough\");\n$RefreshReg$(_c2, \"Study\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Cards/Study.js"],"names":["React","useState","useEffect","useHistory","useParams","useRouteMatch","NavLink","readDeck","StudyCard","MIN_CARDS","NotEnough","numCards","browserHistory","addCardUrl","push","Study","console","log","history","url","params","deckId","deckName","cardList","counter","setCounter","incrementCounter","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,aAAhC,EAA+CC,OAA/C,QAA8D,kBAA9D;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,SAAS,GAAG,CAAlB;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,cAA7B,EAA6CC,UAA7C,EAAyD;AACrD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,uCACuBJ,SADvB,iCAC6DE,QAD7D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAE,MAAM;AACXC,QAAAA,cAAc,CAACE,IAAf,CAAoBD,UAApB;AAAgC,OAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;KAhBQH,S;AAkBT,OAAO,MAAMK,KAAK,GAAG,MAAM;AAAA;;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAUd,aAAa,EAA7B;AACA,QAAMe,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,MAAM,GAAGD,MAAM,CAAC,QAAD,CAArB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,MAA/B,EANuB,CAOvB;AAEA;;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMyB,gBAAgB,GAAGD,UAAU,CAAEE,CAAD,IAAO;AAAC,WAAQA,CAAC,GAAC,CAAV;AAAa,GAAtB,CAAnC,CAbuB,CAcvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,2BACI;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,SACsCL,QADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhDM;;GAAMP,K;UAEOZ,U,EACAE,a,EACDD,S;;;MAJNW,K;AAkDb,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch, NavLink } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport StudyCard from \"./StudyCard\";\r\nconst MIN_CARDS = 3;\r\n\r\nfunction NotEnough(numCards, browserHistory, addCardUrl) {\r\n    return (\r\n        <div>\r\n            <h2>Not enough cards</h2>\r\n            <p>\r\n                You need at least {MIN_CARDS} cards to study. There are {numCards} cards in this \r\n                deck.\r\n            </p>\r\n            <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    browserHistory.push(addCardUrl)}}\r\n            >\r\n                Add Cards</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Study = () => {\r\n    console.log(\"ENTERING STUDY COMPONENT\");\r\n    const history = useHistory();\r\n    const { url } = useRouteMatch();\r\n    const params = useParams();\r\n    const deckId = params['deckId'];\r\n    console.log(\"STUDY DECK ID, \", deckId);\r\n    // const deckUrl = url.substr(0, (url.length - \"cards/new\".length) - 1)\r\n\r\n    // const [thisDeck, setThisDeck] = useState({});\r\n    let deckName = \"\";\r\n    let cardList = [];\r\n    const [counter, setCounter] = useState(0);\r\n    const incrementCounter = setCounter((x) => {return (x+1)});\r\n    // useEffect(() => {\r\n    //     setThisDeck({});\r\n    //     const abortController = new AbortController();\r\n    //     async function loadCards() {\r\n    //         try {\r\n    //             let response = await readDeck(deckId, abortController.signal);\r\n    //             // console.log('EDIT RESPONSE was: ', response['description']);\r\n    //             // let deckFromAPI = response;\r\n    //             setThisDeck(response);\r\n    //             // deckName = thisDeck['name'];\r\n    //             // cardList = thisDeck['cards'];\r\n    //         }\r\n    //         catch(error)    {\r\n    //             return \"ERROR \" + error; // <ErrorMessage error={error} />;\r\n    //         }\r\n    //     }\r\n    //     loadCards();\r\n    //     return (() => { abortController.abort() });\r\n    // }, []);\r\n    \r\n    return(\r\n        <div>\r\n            <header>\r\n                <NavLink to=\"/\">Home</NavLink> / {deckName} / Study\r\n            </header>\r\n            {/* {cardList.length < MIN_CARDS} ? {NotEnough(cardList.length,\r\n                history, `${url}/cards/new`)} : {\r\n                    <StudyCard\r\n                        deckName={deckName}\r\n                        cardList={cardList}\r\n                        counterObj={{count: counter, incrementer: incrementCounter}}\r\n                    />} */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}