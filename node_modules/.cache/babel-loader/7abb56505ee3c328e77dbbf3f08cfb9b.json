{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\CreateDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useEffect, NavLink } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateDeck = () => {\n  _s();\n\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const handleNameChange = event => setName(event['target']['value']);\n\n  const handleDescChange = event => setDesc(event['target']['value']);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const partialNewDeck = {\n      ['name']: name,\n      ['description']: desc\n    };\n    const abortController = new AbortController();\n\n    async function upload() {\n      try {\n        const response = await createDeck(partialNewDeck, abortController.signal);\n        console.log(\"CREATE DECK response: \", response);\n        return response['id'];\n      } catch (error) {\n        console.log(\"ERROR: \" + error); // <ErrorMessage error={error} />;\n\n        return undefined;\n      }\n    }\n\n    const newDeckID = upload();\n    history.push(`/decks/${newDeckID}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), \" / Create Deck\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Enter name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          name: \"name\",\n          onChange: handleNameChange,\n          value: name,\n          placeholder: \"Deck Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"desc\",\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"desc\",\n          name: \"desc\",\n          onChange: handleDescChange,\n          value: desc,\n          placeholder: \"Brief description of the deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateDeck, \"BGdr8vOXYu6E2SgRCjEv/3lSg4E=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDeck;\nexport default CreateDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Home/CreateDeck.js"],"names":["React","useState","useHistory","useEffect","NavLink","createDeck","CreateDeck","history","name","setName","desc","setDesc","handleNameChange","event","handleDescChange","handleSubmit","preventDefault","partialNewDeck","abortController","AbortController","upload","response","signal","console","log","error","undefined","newDeckID","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useEffect, NavLink } from \"react-router-dom\";\r\nimport { createDeck } from \"../../utils/api/index\";\r\n\r\nexport const CreateDeck = () => {\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const handleNameChange = (event) => setName(event['target']['value']);\r\n    const handleDescChange = (event) => setDesc(event['target']['value']);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const partialNewDeck = {['name']: name, ['description']: desc};\r\n        const abortController = new AbortController();\r\n        async function upload() {\r\n            try {\r\n                const response = await createDeck(partialNewDeck, abortController.signal);\r\n                console.log(\"CREATE DECK response: \", response);\r\n                return response['id'];\r\n            }\r\n            catch(error) {\r\n                console.log(\"ERROR: \" + error); // <ErrorMessage error={error} />;\r\n                return undefined;\r\n            }\r\n        }\r\n        const newDeckID = upload();\r\n        history.push(`/decks/${newDeckID}`);\r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <header>\r\n                <NavLink to=\"/\">Home</NavLink> / Create Deck\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\">\r\n                    Enter name:\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        onChange={handleNameChange}\r\n                        value={name}\r\n                        placeholder=\"Deck Name\"\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"desc\">\r\n                    Description:\r\n                    <textarea\r\n                        id=\"desc\"\r\n                        name=\"desc\"\r\n                        onChange={handleDescChange}\r\n                        value={desc}\r\n                        placeholder=\"Brief description of the deck\"\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={() => history.push(\"/\")}>Cancel</button>\r\n            </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CreateDeck;"]},"metadata":{},"sourceType":"module"}