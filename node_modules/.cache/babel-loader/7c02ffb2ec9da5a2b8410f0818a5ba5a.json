{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\DeleteDeckButton.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteDeckButton({\n  deck,\n  browserHistory\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params['deckId'];\n\n  const handleDelete = event => {\n    event.preventDefault();\n\n    if (window.confirm(\"Delete this deck? You will not be able to recover it.\")) {\n      const abortController = new AbortController();\n\n      try {\n        deleteDeck(deck['id'], abortController.signal);\n      } catch (error) {\n        return \"ERROR: \" + error; // <ErrorMessage error={error} />;\n      }\n\n      if (deckId) browserHistory.push(\"/\");else browserHistory.go(0); // refresh if home\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: handleDelete,\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DeleteDeckButton, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = DeleteDeckButton;\nexport default DeleteDeckButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteDeckButton\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Decks/DeleteDeckButton.js"],"names":["useParams","deleteDeck","DeleteDeckButton","deck","browserHistory","params","deckId","handleDelete","event","preventDefault","window","confirm","abortController","AbortController","signal","error","push","go"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAA1B,EAAkD;AAAA;;AAChD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,MAAM,GAAGD,MAAM,CAAC,QAAD,CAArB;;AACA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGC,MAAM,CAACC,OAAP,CAAe,uDAAf,CAAH,EAA4E;AAC1E,YAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAI;AACFZ,QAAAA,UAAU,CAACE,IAAI,CAAC,IAAD,CAAL,EAAaS,eAAe,CAACE,MAA7B,CAAV;AACD,OAFD,CAGA,OAAMC,KAAN,EAAa;AACT,eAAO,YAAYA,KAAnB,CADS,CACiB;AAC7B;;AACD,UAAGT,MAAH,EAAWF,cAAc,CAACY,IAAf,CAAoB,GAApB,EAAX,KACKZ,cAAc,CAACa,EAAf,CAAkB,CAAlB,EATqE,CAS/C;AAC5B;AACF,GAbH;;AAcA,sBACI;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAEV,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD;;GApBQL,gB;UACQF,S;;;KADRE,gB;AAsBT,eAAeA,gBAAf","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../../utils/api/index\";\r\n\r\nfunction DeleteDeckButton({deck, browserHistory}) {\r\n  const params = useParams();\r\n  const deckId = params['deckId'];\r\n  const handleDelete = (event) => {\r\n      event.preventDefault();\r\n      if(window.confirm(\"Delete this deck? You will not be able to recover it.\")) {\r\n        const abortController = new AbortController();\r\n        try {\r\n          deleteDeck(deck['id'], abortController.signal);\r\n        }\r\n        catch(error) {\r\n            return \"ERROR: \" + error; // <ErrorMessage error={error} />;\r\n        }\r\n        if(deckId) browserHistory.push(\"/\");\r\n        else browserHistory.go(0); // refresh if home\r\n      }\r\n    };\r\n  return (\r\n      <button className=\"btn btn-danger\" onClick={handleDelete} >Delete</button>\r\n  );\r\n}\r\n\r\nexport default DeleteDeckButton;"]},"metadata":{},"sourceType":"module"}