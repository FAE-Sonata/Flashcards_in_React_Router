{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heyu1\\\\OneDrive\\\\Career\\\\Thinkful\\\\Test_examples\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Cards\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, useRouteMatch, NavLink, Route, Switch } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport AddCard from \"./AddCard\";\nimport StudyCard from \"./StudyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_CARDS = 3;\n\nfunction NotEnough(numCards, browserHistory, addCardUrl) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not enough cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need at least \", MIN_CARDS, \" cards to study. There are \", numCards, \" cards in this deck.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        browserHistory.push(addCardUrl);\n      },\n      children: \"Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = NotEnough;\nexport const Study = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    url\n  } = useRouteMatch();\n  const ADD_CARD_URL = `${url.slice(url.indexOf(\"decks\"), url.indexOf(\"study\") - 1)}/cards/new`;\n  const params = useParams();\n  const deckId = params['deckId'];\n  const [thisDeck, setThisDeck] = useState({});\n  const [cardList, setCardList] = useState([]);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    setThisDeck({});\n    const abortController = new AbortController();\n\n    async function loadCards() {\n      try {\n        let response = await readDeck(deckId, abortController.signal);\n        setThisDeck(response);\n        setCardList(response['cards']);\n      } catch (error) {\n        return \"ERROR \" + error; // <ErrorMessage error={error} />;\n      }\n    }\n\n    loadCards();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \" / \", thisDeck['name'], \" / Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: url,\n        exact: true,\n        children: cardList.length < MIN_CARDS ? NotEnough(cardList.length, history, `${ADD_CARD_URL}`) : /*#__PURE__*/_jsxDEV(StudyCard, {\n          deckName: thisDeck['name'],\n          cardList: cardList,\n          counterObj: {\n            count: counter,\n            setCounter: setCounter\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ADD_CARD_URL,\n        children: /*#__PURE__*/_jsxDEV(AddCard, {\n          deckName: thisDeck['name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Study, \"BDuoBq2FwHeZCPuIrYn3xKdpaN0=\", false, function () {\n  return [useHistory, useRouteMatch, useParams];\n});\n\n_c2 = Study;\nexport default Study;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotEnough\");\n$RefreshReg$(_c2, \"Study\");","map":{"version":3,"sources":["C:/Users/heyu1/OneDrive/Career/Thinkful/Test_examples/Project_Flashcards_Qualified_1/src/Layout/Cards/Study.js"],"names":["React","useState","useEffect","useHistory","useParams","useRouteMatch","NavLink","Route","Switch","readDeck","AddCard","StudyCard","MIN_CARDS","NotEnough","numCards","browserHistory","addCardUrl","push","Study","history","url","ADD_CARD_URL","slice","indexOf","params","deckId","thisDeck","setThisDeck","cardList","setCardList","counter","setCounter","abortController","AbortController","loadCards","response","signal","error","abort","length","count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch, NavLink, Route, Switch } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport AddCard from \"./AddCard\";\r\nimport StudyCard from \"./StudyCard\";\r\nconst MIN_CARDS = 3;\r\n\r\nfunction NotEnough(numCards, browserHistory, addCardUrl) {\r\n    return (\r\n        <div>\r\n            <h2>Not enough cards</h2>\r\n            <p>\r\n                You need at least {MIN_CARDS} cards to study. There are {numCards} cards in this \r\n                deck.\r\n            </p>\r\n            <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    browserHistory.push(addCardUrl)}}\r\n            >\r\n                Add Cards</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Study = () => {\r\n    const history = useHistory();\r\n    const { url } = useRouteMatch();\r\n    const ADD_CARD_URL = `${url.slice(url.indexOf(\"decks\"), url.indexOf(\r\n        \"study\") - 1)}/cards/new`;\r\n\r\n    const params = useParams();\r\n    const deckId = params['deckId'];\r\n\r\n    const [thisDeck, setThisDeck] = useState({});\r\n    const [cardList, setCardList] = useState([]);\r\n    const [counter, setCounter] = useState(0);\r\n    useEffect(() => {\r\n        setThisDeck({});\r\n        const abortController = new AbortController();\r\n        async function loadCards() {\r\n            try {\r\n                let response = await readDeck(deckId, abortController.signal);\r\n                setThisDeck(response);\r\n                setCardList(response['cards']);\r\n            }\r\n            catch(error)    {\r\n                return \"ERROR \" + error; // <ErrorMessage error={error} />;\r\n            }\r\n        }\r\n        loadCards();\r\n        return (() => { abortController.abort() });\r\n    }, []);\r\n    \r\n    return(\r\n        <div>\r\n            <header>\r\n                <NavLink to=\"/\">Home</NavLink> / {thisDeck['name']} / Study\r\n            </header>\r\n            <Switch>\r\n                {/* TODO: FIX PATHING TO NEW CARD SCREEN */ }\r\n                <Route path={url} exact={true}>\r\n                    {(cardList.length < MIN_CARDS) ? (NotEnough(cardList.length,\r\n                    history, `${ADD_CARD_URL}`)) : (\r\n                        <StudyCard\r\n                            deckName={thisDeck['name']}\r\n                            cardList={cardList}\r\n                            counterObj={{count: counter, setCounter: setCounter}}\r\n                        />)}\r\n                </Route>\r\n                <Route path={ADD_CARD_URL}>\r\n                    <AddCard deckName={thisDeck['name']}/>\r\n                </Route>\r\n            </Switch>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}