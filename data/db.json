{
  "decks": [
    {
      "id": 1,
      "name": "Rendering in React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": 2
    },
    {
      "name": "Promises",
      "description": "Overview of asynchronous programming, particularly when used with making web requests",
      "id": 3
    }
  ],
  "cards": [
    {
      "id": 1,
      "front": "Differentiate between Real DOM and Virtual DOM.",
      "back": "Virtual DOM updates are faster but do not directly update the HTML",
      "deckId": 1
    },
    {
      "id": 2,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 1
    },
    {
      "id": 3,
      "front": "How do you pass data from one component to a React child component?",
      "back": "As properties or props.",
      "deckId": 1
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "cards": [],
      "front": "b1",
      "back": "b2",
      "deckId": 1,
      "id": 7
    },
    {
      "front": "Use the \"exact\" option to match paths at a specific directory level pattern",
      "back": "Otherwise, URLs with sub-directories may also be matched and cause unintended consequences",
      "deckId": 2,
      "id": 8
    },
    {
      "front": "Use the \"await\" keyword",
      "back": "to ensure code dependent on the results of a Promise  are executed AFTER the Promise",
      "deckId": 3,
      "id": 9
    },
    {
      "front": "Async keyword",
      "back": "is used to wrap functions with asynchronous calls",
      "deckId": 3,
      "id": 10
    }
  ]
}